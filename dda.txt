#include <GL/glut.h>


void drawLine(float x1, float y1, float x2, float y2) {
    float dx = x2 - x1;
    float dy = y2 - y1;
    float m = dy / dx;

    if (m >= -1 && m <= 1) {
        float y = y1;
        for (float x = x1; x <= x2; x += 1) {
            glBegin(GL_POINTS);
            glVertex2f(x, y);
            glEnd();
            y += m;
        }
    } else {
        float x = x1;
        float inv_m = dx / dy;
        for (float y = y1; y <= y2; y += 1) {
            glBegin(GL_POINTS);
            glVertex2f(x, y);
            glEnd();
            x += inv_m;
        }
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1, 1, 1);
    drawLine(50, 50, 400, 300);
    glFlush();
}

void init() {
    glClearColor(0, 0, 0, 0);
    glColor3f(1, 1, 1);
    glPointSize(2.0);
    gluOrtho2D(0, 500, 0, 500);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutCreateWindow("DDA");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
